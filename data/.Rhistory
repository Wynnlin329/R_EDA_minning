?(churn)
data(churn)
data(churn)
str(churnTrain)
?(churn)
?(churn)
library(C50)
?(churn)
data(churn)
install.packages('C50')
install.packages("C50")
library(C50)
library(C50)
?(churn)
data(churn)
str(churnTrain)
install.packages('C50')
install.packages("C50")
library(C50)
?(churn)
data(churn)
str(churnTrain)
install.packages("C50", repos="http://R-Forge.R-project.org")
install.packages("C50", repos = "http://R-Forge.R-project.org")
library(C50)
library(C50)
?(churn)
data(churn)
?(churn)
data(churn)
str(churnTrain)
install.packages('C50')
install.packages("C50")
install.unpackages('C50')
uninstall.packages('C50')
remove.packages("C50")
install.packages('C50')
install.packages("C50")
library(C50)
?(churn)
data(churn)
install.packages('Rtools')
library(C50)
install.packages('C50')
install.packages("C50")
library(C50)
install.packages('C50')
install.packages("C50")
detach("package:base", unload = TRUE)
library(base)
library(C50)
install.packages('C50')
install.packages("C50")
library(C50)
?(churn)
data(churn)
str(churnTrain)
remove.packages('C50')
install.packages('C50')
install.packages("C50")
library(C50)
?(churn)
data(churn)
#餘弦相似度 (COSINE)
#下面的數據實際上是故意選擇了一個完美的線性關係：y = 0.10 + 0.01 x
# 所以相關係數 = 1
x <- c(1,2,3,5,8)
y <- c(0.11,0.12,0.13,0.15,0.18)
a <- matrix(c(x,y),c(5,2)) #5*2矩陣
a
#交叉分析表 ftable
z <- data.frame(Main= c('豚','牛','牛','牛','豚','牛','豚'),
sub=c('有','沒有','沒有','有','有','有','沒有') ,
drink=c('tea','coffee','coffee','tea','coffee','tea','coffee'))
z
ftable(z, row.vars = 1:2, col.vars = "drink")
ftable(z, row.vars = "Main", col.vars = "drink")
library(plyr)
# 產生40筆隨機資料
df <- data.frame(
group = c(rep('個人戶', 20), rep('企業戶', 20)),
sex = sample(c("M", "F"), size = 40, replace = TRUE),
age = floor(runif(n = 40, min = 25, max = 40)),
bill = floor(runif(n = 40, min = 199, max = 2600))
)
# 利用group, sex進行分組，並計算年齡的平均數、標準差以及bill總和與平均
ddply(df, .(group, sex), summarize,
mean_age = round(mean(age), 2),
sd_age = round(sd(age), 2),
sum_bill = sum(bill),
mean_bill = round(mean(bill), 2)
)
#計算資料筆數count
ddply(df, c('group','sex'), nrow)
ddply(df, c('group','sex','age'), nrow) #是不是很像樞紐分析表的原始資料
library(vcd)
#用vcd計算列聯表百分比
install.packages("vcd")
install.packages("vcd")
library(vcd)
#用vcd計算列聯表百分比
install.packages("vcd")
install.packages("vcd")
#用vcd計算列聯表百分比
install.packages("vcd")
library(vcd)
# 產生40筆隨機資料
df <- data.frame(
group = c(rep('個人戶', 20), rep('企業戶', 20)),
sex = sample(c("M", "F"), size = 40, replace = TRUE),
age = floor(runif(n = 40, min = 25, max = 40)),
bill = floor(runif(n = 40, min = 199, max = 2600))
)
data.frame(df$bill,prop.table(df$bill))
# bill的百分比统计
prop.table(df$bill)#prob 絕對數字轉相對
data.frame(df$bill,prop.table(df$bill))
# 產生40筆隨機資料
df <- data.frame(
group = c(rep('個人戶', 20), rep('企業戶', 20)),
sex = sample(c("M", "F"), size = 40, replace = TRUE),
age = floor(runif(n = 40, min = 25, max = 40)),
bill = floor(runif(n = 40, min = 199, max = 2600))
)
table(df$age)
#轉成百分比
prop.table( table(df$age) )
#二維列聯表轉成百分比
table(df$age, df$group)
prop.table(table(df$age, df$group) )  # 表格內全部加總 = 1
#二維列聯表轉成百分比
table(df$age, df$group)
prop.table(table(df$age, df$group) ,2 )  # 參數2表示各行加總 = 1
#二維列聯表轉成百分比
table(df$age, df$group)
prop.table(table(df$age, df$group) ,1)  # 參數1表示各列加總 = 1
#ftable搭配vcd
#交叉分析表 ftable
z <- data.frame(Main= c('豚','牛','牛','牛','豚','牛','豚'), sub=c('有','沒有','沒有','有','有','有','
沒有') , drink=c('tea','coffee','coffee','tea','coffee','tea','coffee'))
z
ftable(z, row.vars = 1:2, col.vars = "drink")
prop.table( ftable(z, row.vars = 1:2, col.vars = "drink") )
# 長條圖
data(mtcars)
attach(mtcars)
table(cyl) #利用汽缸數產生次數分配
T_cyl = table(cyl)
barplot(T_cyl , main="cyl 汽缸數次數分配表", xlab="汽缸數", col=c("red", "blue",
"green"), names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"), border = "cyan")
T_cyl = table(cyl)
barplot(T_cyl ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue", "green"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"), border = "cyan",
horiz=TRUE)
prop.table( table(cyl) )
T_cyl1 = prop.table( table(cyl) )
barplot(T_cyl1 , main="cyl 汽缸數次數分配表", xlab="汽缸數", col=c("red",
"blue", "green"), names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"), border = "cyan",horiz=TRUE)
barplot(T_cyl1 , main="cyl 汽缸數次數分配表", xlab="汽缸數比例", col=c("red",
"blue", "green"), names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"), border = "cyan",horiz=TRUE)
# 分組長條圖
T_cyl2 = table(am,cyl) #建立 變速器與汽缸數交叉表
T_cyl2
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=FALSE,
legend = rownames(T_cyl2), beside=TRUE)
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=FALSE,
legend = rownames(T_cyl2), beside=FALSE)
args.legend = list(x = 'topleft')
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=FALSE,
legend = rownames(T_cyl2), beside=FALSE)
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=FALSE,
legend = rownames(T_cyl2), beside=FALSE,
args.legend = list(x = 'topleft'))
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=FALSE,
legend = rownames(T_cyl2), beside=FALSE,
args.legend = list(x = 'top'))
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=FALSE,
legend = rownames(T_cyl2), beside=FALSE,
args.legend = list(x = 'topleft'))
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=TRUE,
legend = rownames(T_cyl2), beside=FALSE,
args.legend = list(x = 'topleft'))
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=TRUE,
legend = rownames(T_cyl2), beside=FALSE,
args.legend = list(x = 'topright'))
barplot(T_cyl2 ,
main="cyl 汽缸數次數分配表",
xlab="汽缸數",
col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"),
border = "cyan",
horiz=TRUE,
legend = rownames(T_cyl2), beside=FALSE,
args.legend = list(x = 'right'))
# 長條圖(百分比堆疊圖)
prop.table( table(am,cyl) ,2)
T_cyl3 = prop.table( table(am,cyl) ,2)
par(las=1) #標籤=1，表示標籤文字為水平。 標籤=2，表示標籤文字為垂直。
barplot(T_cyl3 , main="cyl 汽缸數次數百分比堆疊圖", xlab="汽缸數", col=c("red", "blue"),
names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"), border = "cyan",
horiz=FALSE, legend = c('自動','手動'), beside=FALSE, cex.names=2)
# 長條圖(百分比堆疊圖)
barplot(T_cyl3 , main="cyl 汽缸數次數百分比堆疊圖", xlab="汽缸數",
col=c("red", "blue"), names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"), border = "cyan",
horiz=FALSE, legend = c('自動','手動'), beside=FALSE, cex.names=2, space=2)
#使用電信業客戶流失資料
library(C50)
data(churn)
attach(churnTrain)
par(mfrow=c(2,2)) #圖片區配置 2*2 的圖，共4個圖
# 繪製機率密度函數曲線
par(mfrow=c(1,2))
total_day_minutes_DS <- density(total_day_minutes) #機率密度函數
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =7",
ylab="門號數", col="red", breaks=7 )
total_day_minutes_DS <- density(total_day_minutes) #機率密度函數
total_day_minutes_DS <- density(total_day_minutes) #機率密度函數
# 與直方圖搭配的density
par(mfrow=c(1,2))
plot(rnorm(1000))  #從常態分配隨機取出1000個值
plot(density(rnorm(1000))) #y=f(x)
par(mfrow=c(1,2))
plot(rpois(1000,0.1)) #從卜瓦松分配隨機取出1000個值
plot(density(rpois(1000,0.1)))
plot(rpois(1000,0.1)) #從卜瓦松分配隨機取出1000個值
par(mfrow=c(1,2))
plot(rpois(1000,0.1)) #從卜瓦松分配隨機取出1000個值
plot(density(rpois(1000,0.1)))
plot(rnorm(1000))  #從常態分配隨機取出1000個值
plot(density(rnorm(1000))) #y=f(x)
# 簡單圓餅圖
pieces <- c(8,8,2,4,2)
pie(pieces , labels = c('工作','睡覺','念書','打電動','聊天'), main="生活時
間分配圖")
library(treemap)
install.packages('treemap')
library(treemap)
y=data.frame(C_ID =c('群集1','群集2','群集3','群集4','群集5','群集6','群集7'),
C_RTO=c(0.22,0.3,0.16,0.04,0.19,0.03,0.06)
)
treemap(y,index=c('C_ID'),vSize='C_RTO',vColor='C_RTO')
x <- read.table(file.choose(),header=T, sep=",", fileEncoding='big5') #選擇TaiwanGov.csv
treemap(x,index=c('縣市'),vSize='面積',vColor='面積')
treemap(x,index=c('縣市','行政區名稱'),vSize='面積',vColor='面積')
install.packages("wordcloud") # 文字雲繪圖工具
library(wordcloud)
setwd("C:\\Users\summe\OneDrive\文件\R\DM\data")
setwd("C:\\Users\\summe\OneDrive\文件\R\DM\data")
setwd("C:\\Users\\summe\\OneDrive\文件\R\DM\data")
setwd("C:\\Users\\summe\\OneDrive\\文件\\R\\DM\\data")
setwd("C:\\Users\\summe\\OneDrive\\文件\\R\\DM\\data")
d=read.table("WordCount.csv", header=T, sep=",") #讀取詞頻表
# 製作文字雲
# random.order = F 頻率高的字會在中間
# ordered.colors = F 字體顏色利用詞頻頻率挑選
# rainbow(150)產出150組顏色
wordcloud(d$words, d$freq, min.freq = 300, random.order = F, ordered.colors = F,
colors = rainbow(150))
setwd("C:\\Users\\summe\\OneDrive\\文件\\R\\DM\\data")
d=read.table("WordCount.csv", header=T, sep=",") #讀取詞頻表
# 製作文字雲
# random.order = F 頻率高的字會在中間
# ordered.colors = F 字體顏色利用詞頻頻率挑選
# rainbow(150)產出150組顏色
wordcloud(d$words, d$freq, min.freq = 300, random.order = F, ordered.colors = F,
colors = rainbow(150))
# 製作文字雲
# random.order = F 頻率高的字會在中間
# ordered.colors = F 字體顏色利用詞頻頻率挑選
# rainbow(150)產出150組顏色
wordcloud(d$words, d$freq, min.freq = 300, random.order = F, ordered.colors = F,
colors = rainbow(150))
warnings()
#使用電信業客戶流失資料
library(C50)
data(churn)
data(churn)
data(churn)
attach(churnTrain)
par(mfrow=c(2,2)) #圖片區配置 2*2 的圖，共4個圖
#設定分組組數
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =11",
ylab="門號數", col="red" ) # 參數breaks預設為11
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =2",
ylab="門號數", col="red", breaks=2 ) # 參數breaks設為2
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =20",
ylab="門號數", col="red", breaks=20 ) # 參數breaks設為20
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =7",
ylab="門號數", col="red", breaks=7 ) # 參數breaks設為7
# 繪製機率密度函數曲線
par(mfrow=c(1,2))
total_day_minutes_DS <- density(total_day_minutes) #機率密度函數
#使用電信業客戶流失資料
library(C50)
#使用電信業客戶流失資料
library(C50)
data(churn)
attach(churnTrain)
#使用電信業客戶流失資料
library(C50)
data(churn)
attach(churnTrain)
library(C50)
?(churn)
data(churn)
str(churnTrain)
str(churnTrain)
data(churn)
churn <- read.csv("C:\Program Files\R\R-3.6.2\library\C50/data/churn.csv", header=T)
churn <- read.csv("C:\\Program Files\\R\\R-3.6.2\\library\\C50\\data\\churn.csv", header=T)
str(churnTrain)
install.packages('C50')
data(churn)
library(C50)
data(churn)
churn <- read.csv("C:\\Program Files\\R\\R-3.6.2\\library\\C50\\data\\churn.csv", header=T)
getwd
getwd()
library(C50)
?(churn)
data(churn)
churn <- read.csv("C:\\Program Files\\R\\R-3.6.2\\library\\C50\\data\\churn.csv", header=T)
churn <- read.csv("C:\\Program Files\\R\\R-3.6.2\\library\\C50\\data\\churn.csv", header=T)
str(churnTrain)
churnTrain <- read.csv("C:\\Program Files\\R\\R-3.6.2\\library\\C50\\data\\churnTrain.csv", header=T)
str(churnTrain)
View(churn)
View(churnTrain)
View(churnTrain)
churnTrain <- read.csv("C:\\Program Files\\R\\R-3.6.2\\library\\C50\\data\\churnTrain.csv", header=T)
str(churnTrain)
attach(churnTrain)
attach(churnTrain)
par(mfrow=c(2,2)) #圖片區配置 2*2 的圖，共4個圖
#設定分組組數
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =11",
ylab="門號數", col="red" ) # 參數breaks預設為11
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =2",
ylab="門號數", col="red", breaks=2 ) # 參數breaks設為2
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =20",
ylab="門號數", col="red", breaks=20 ) # 參數breaks設為20
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =7",
ylab="門號數", col="red", breaks=7 ) # 參數breaks設為7
# 繪製機率密度函數曲線
par(mfrow=c(1,2))
total_day_minutes_DS <- density(total_day_minutes) #機率密度函數
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =7",
ylab="門號數", col="red", breaks=7 )
hist(total_day_minutes, xlab=" 白天通話分鐘數", main="breaks =7",
ylab="門號數", col="red", breaks=7, probability = TRUE )
lines(total_day_minutes_DS)
total_day_minutes_DS
# 自行產生藥劑量與感冒痊癒天數資料
x <- c(3,3,4,3,6,8,8,9) #藥劑量
y <- c(22,25,18,20,16,9,12,5) #感冒痊癒天數
New_x <- data.frame(x=5) #預測當x=5時的痊癒天數
# 建立一個線性迴歸模型
Train <- data.frame(x = x, y = y)
lmTrain <- lm(formula = y ~ x, data = Train)
predicted <- predict(lmTrain , newdata = New_x)
#預測當x=5時的痊癒天數
# 模型摘要
summary(lmTrain )
predicted
# 作圖
plot(y~x , main = "依藥劑量預測痊癒天數", xlab = "藥劑量", ylab = "感冒痊癒天數", family = "STHeiti")
points(x = New_x, y = predicted, col="green", cex = 2, pch = 16)
abline(reg = lmTrain$coefficients, col = "red", lwd = 1) #函數繪製輔助線
New_x <- data.frame(x=7) #預測當x=5時的痊癒天數
# 建立一個線性迴歸模型
Train <- data.frame(x = x, y = y)
lmTrain <- lm(formula = y ~ x, data = Train)
predicted <- predict(lmTrain , newdata = New_x)
predicted
#預測當x=5時的痊癒天數
# 模型摘要
summary(lmTrain )
# 作圖
plot(y~x , main = "依藥劑量預測痊癒天數", xlab = "藥劑量", ylab = "感冒痊癒天數", family = "STHeiti")
points(x = New_x, y = predicted, col="green", cex = 2, pch = 16)
abline(reg = lmTrain$coefficients, col = "red", lwd = 1) #函數繪製輔助線
# 長條圖(百分比堆疊圖)
barplot(T_cyl3 , main="cyl 汽缸數次數百分比堆疊圖", xlab="汽缸數",
col=c("red", "blue"), names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"), border = "cyan",
horiz=FALSE, legend = c('自動','手動'), beside=FALSE, cex.names=2, space=1)
# 長條圖(百分比堆疊圖)
barplot(T_cyl3 , main="cyl 汽缸數次數百分比堆疊圖", xlab="汽缸數",
col=c("red", "blue"), names.arg=c("4 汽缸", "6 汽缸", "8 汽缸"), border = "cyan",
horiz=FALSE, legend = c('自動','手動'), beside=FALSE, cex.names=2, space=2)
New_x <- data.frame(x=7) #預測當x=5時的痊癒天數
# 建立一個線性迴歸模型
Train <- data.frame(x = x, y = y)
lmTrain <- lm(formula = y ~ x, data = Train)
predicted <- predict(lmTrain , newdata = New_x)
predicted
#預測當x=5時的痊癒天數
# 模型摘要
summary(lmTrain )
# 作圖
plot(y~x , main = "依藥劑量預測痊癒天數", xlab = "藥劑量", ylab = "感冒痊癒天數", family = "STHeiti")
points(x = New_x, y = predicted, col="green", cex = 2, pch = 16)
abline(reg = lmTrain$coefficients, col = "red", lwd = 1) #函數繪製輔助線
getwd()
#建模
install.packages("rpart")
install.packages("rpart")
library(rpart)
warnings()
windowsFonts()
windowsFonts(Arial=windowsFont("TT Arial"))
barchart(1, scales=list(x=list(fontfamily="Arial")))
library(rpart)
library(C50)
data(churn)
data <- churnTrain[,c(-1,-3,-4,-5,-20)] # 不要第1, 3, 4, 5, 20欄
pca_Traindt <- princomp( data , cor=T) # cor=T 單位不同
summary(pca_Traindt)
summary(pca_Traindt)
warnings()
summary(pca_Traindt)
data <- churnTrain[,c(-1,-3,-4,-5,-20)] # 不要第1, 3, 4, 5, 20欄(文字都排掉 )
library(C50)
data <- churnTrain[,c(-1,-3,-4,-5,-20)] # 不要第1, 3, 4, 5, 20欄(文字都排掉 )
pca_Traindt <- princomp( data , cor=T) # cor=T 單位不同
summary(pca_Traindt)
screeplot(pca_Traindt,type="lines") # 繪製陡坡圖
print(pca_Traindt$loadings, digits = 8, cutoff=0)  #cutoff=0表示接近0也要顯示
print(pca_Traindt$loadings, digits = 8, cutoff=0)  #cutoff=0表示接近0也要顯示
p <- predict(pca_Traindt) #直接算出主成分
head(p,5)
p[,c(1:7)] #取出7個主成分
head(p,5)
head(p[,c(1:7)],5) #取出7個主成分
install.packages("class")
data(iris)
data(iris)
#(1)設定亂數種子
set.seed(123)
#(2)取得資料筆數
n <- nrow(iris)
#(3)取得訓練樣本數的index，70%建模，30%驗證
train_idx <- sample(seq_len(n), size = round(0.7 * n))
#(4)產出訓練資料與測試資料
traindata <- iris[train_idx,]
testdata <- iris[ - train_idx,]
train_y <- traindata[,5]
test_y <- testdata[,5]
#(5)設定K，K通常可以設定為資料筆數的平方根
k_set <- as.integer(sqrt(n))
#(6)建立模型
pred <- knn(train = traindata[-5], test = testdata[-5], cl = train_y, k = k_set)
library(class)
install.packages("class")
library(class)
install.packages("class")
install.packages("class")
library(class)
#(6)建立模型
pred <- knn(train = traindata[-5], test = testdata[-5], cl = train_y, k = k_set)
#(7) 混淆矩陣計算準確度
message("準確度：",sum(diag(table(test_y,pred))) / sum(table(test_y,pred)) *100,"%")#diag斜對角
